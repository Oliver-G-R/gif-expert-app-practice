{"version":3,"sources":["components/AddCategory.jsx","helpers/getGifs.js","components/GifGridItem.jsx","components/GifGrid.jsx","hooks/useFetchGifs.js","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","handleChangeInput","prototype","PropTypes","func","isRequired","getGifs","category","a","Url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACI,oCACI,0BAAMC,SAXO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAqBO,OACvCN,EAAc,OAQV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAAAP,GAAC,OAnBD,SAACA,GAAD,MAAM,CAC5BF,EAAcE,EAAEQ,OAAOF,QAkBIG,CAAkBT,SAQrDN,EAAYgB,UAAY,CACpBf,c,OAAegB,EAAUC,KAAKC,Y,2BCnCrBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QATtB,kBAaZL,GAbY,4CAAH,sDCEPQ,EAAc,SAAC,GAAyB,EAAvBL,GAAwB,IAAnBC,EAAkB,EAAlBA,MAAQC,EAAU,EAAVA,IACvC,OACI,yBAAKI,UAAU,0CACX,yBAAKC,IAAKL,EAAKM,IAAKP,IACpB,2BACKA,KCHJQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EACdnB,mBAAS,CAC/B0B,KAAM,GACNc,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OARAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAK,SAAAjB,GAAI,OAAIe,EAAS,CACfhB,KAAMC,EACNa,SAAS,SAEtB,CAACrB,IAEGsB,EDbyBI,CAAa1B,GAAjCc,EADyB,EAC9BP,KAAcc,EADgB,EAChBA,QAErB,OACG,oCACK,wBAAIJ,UAAU,qCACTjB,GAIDqB,GAAW,uBAAGJ,UAAU,oCAAb,eAGf,yBAAKA,UAAU,aAEPH,EAAOL,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UElBnBkB,EAAe,WAAO,IAAD,EAEQ/C,mBAAS,CAAC,gBAFlB,mBAEvBgD,EAFuB,KAEVjD,EAFU,KAI9B,OACI,oCACI,8CAIA,kBAAC,EAAD,CAAaA,cAAeA,IAG5B,4BAEQiD,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAK3B,EACLA,SAAUA,U,MCdtC8B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.db921b04.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleChangeInput = (e) =>[\r\n        setInputValue(e.target.value)\r\n    ]\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories(cats => [inputValue , ...cats]) // Esto se hace para ahorrar mandar la prop del valor de las categorias\r\n            setInputValue('') \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    value={inputValue}\r\n                    onChange={e => handleChangeInput(e)}\r\n                />\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n    const Url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FNZYIExzty9X2kuUwag6M3oSv354xc88`\r\n    const resp = await fetch(Url)\r\n    const { data } = await resp.json()\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id , title , url} ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>\r\n                {title}\r\n            </p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    const {data:images , loading} = useFetchGifs(category) //para renombrar una propiedad se ponen dos puntos despues para asignar el nombre\r\n\r\n    return (\r\n       <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">\r\n                {category}\r\n            </h3>\r\n\r\n            {\r\n                loading && <p className=\"animate__animated animate__flash\">loading....</p> \r\n            }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => \r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />)\r\n                }\r\n            </div>\r\n       </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(gifs => setstate({\r\n                    data: gifs,\r\n                    loading: false\r\n                }))\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories , setCategories] =  useState(['Dragon Ball'] )\r\n\r\n    return(\r\n        <>\r\n            <h2>\r\n                Gif Expert App\r\n            </h2>\r\n\r\n            <AddCategory setCategories={setCategories}/>\r\n\r\n    \r\n            <ol>\r\n                {\r\n                    categories.map( category => \r\n                        <GifGrid \r\n                            key={category} \r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {GifExpertApp} from './GifExpertApp'\n\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}